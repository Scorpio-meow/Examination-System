[
  {
    "id": 1,
    "question": "下列何者最能體現 No Code 平台的核心特徵？",
    "options": [
      "A. 需手寫複雜程式邏輯",
      "B. 以圖形化拖拉方式建構工作流程",
      "C. 僅支援專屬程式語言",
      "D. 只能部署在本地端伺服器"
    ],
    "answer": "B",
    "explanation": "No Code 平台允許使用者透過視覺化元件拖拉、配置流程，無需撰寫任何程式碼即可快速實現業務邏輯。"
  },
  {
    "id": 2,
    "question": "下列何者屬於 Low Code 平台特性？",
    "options": [
      "A. 完全無程式碼",
      "B. 僅能修改範本",
      "C. 提供可視化介面並允許少量自訂程式",
      "D. 不支援資料庫連接"
    ],
    "answer": "C",
    "explanation": "Low Code 平台結合圖形化組件與程式碼擴充，使用者在可視化基礎上撰寫少量程式，以滿足複雜需求。"
  },
  {
    "id": 3,
    "question": "若要評估一個工具是否屬於 No Code 類型，下列何者最不符合？",
    "options": [
      "A. 提供預設模板與拖拉元件",
      "B. 完全以 API 呼叫方式進行開發",
      "C. 支援業務人員快速組裝應用",
      "D. 不需學習程式語法"
    ],
    "answer": "B",
    "explanation": "以 API 呼叫為主要開發方式仍需撰寫程式，與 No Code『零程式碼』理念相違。"
  },
  {
    "id": 4,
    "question": "No Code / Low Code 與傳統開發模式最大的差異為何？",
    "options": [
      "A. 僅在雲端運行",
      "B. 可視化配置減少手動編碼",
      "C. 所有平台均免費",
      "D. 只支援單一作業系統"
    ],
    "answer": "B",
    "explanation": "No Code/Low Code 核心在於可視化配置元件與流程，顯著降低編碼工作量，加速開發。"
  },
  {
    "id": 5,
    "question": "在 No Code / Low Code 平台上，使用者最常見的開發介面是？",
    "options": [
      "A. 命令列終端",
      "B. 可視化流程圖編輯器",
      "C. 原始程式檔案編輯器",
      "D. 純文字配置檔"
    ],
    "answer": "B",
    "explanation": "平台以流程圖或元件面板方式展示功能模組，使用者可拖拉組合、設定屬性，直觀完成應用。"
  },
  {
    "id": 6,
    "question": "下列何者為 No Code/Low Code 的主要優勢？",
    "options": [
      "A. 絕無技術債",
      "B. 開發門檻低、交付速度快",
      "C. 無需任何維運",
      "D. 支援所有程式語言"
    ],
    "answer": "B",
    "explanation": "No Code/Low Code 平台封裝大量常見功能，使用者可快速組裝應用並縮短開發週期，但仍需考慮平台限制與維運。"
  },
  {
    "id": 7,
    "question": "使用 Low Code 平台可能面臨的限制不包括？",
    "options": [
      "A. 擴展性受限於平台 API",
      "B. 高度客製需求需額外編碼",
      "C. 能在任意環境自由部署",
      "D. 依賴平台供應商升級與維護"
    ],
    "answer": "C",
    "explanation": "Low Code 平台多數採雲端托管或專屬部署，並非可在任何環境無障礙部署，受限於供應商環境支援。"
  },
  {
    "id": 8,
    "question": "No Code/Low Code 平台在企業數位轉型中最常扮演何種角色？",
    "options": [
      "A. 取代所有核心系統",
      "B. 加速原型開發與快速驗證",
      "C. 僅作為測試環境",
      "D. 代替資料庫管理系統"
    ],
    "answer": "B",
    "explanation": "平台適用於快速構建 MVP（最小可行產品），讓業務人員與開發團隊能快速驗證需求，縮短從概念到驗證的時間。"
  },
  {
    "id": 9,
    "question": "若企業需高度整合和效能優化，下列何者為可能的挑戰？",
    "options": [
      "A. 平台過度開放自訂",
      "B. 無需任何程式碼即可滿足所有需求",
      "C. 平台封閉性導致擴展性不足",
      "D. 完全免除維運成本"
    ],
    "answer": "C",
    "explanation": "平台若封閉且不允許深度自訂，當需求超出原有功能時，可能需要回歸傳統開發或採用第三方整合。"
  },
  {
    "id": 10,
    "question": "在選擇 No Code/Low Code 平台時，下列何者屬於成本效益分析考量？",
    "options": [
      "A. 平台 UI 顏色搭配",
      "B. 授權費與後續維運成本之平衡",
      "C. 開發者個人喜好",
      "D. 平台名稱是否響亮"
    ],
    "answer": "B",
    "explanation": "除了前期授權費外，企業需估算培訓、擴展、API 呼叫與維運成本，評估整體投資回報率。"
  },
  {
    "id": 11,
    "question": "下列何者不屬於生成式 AI 的應用領域？",
    "options": [
      "A. 文本生成",
      "B. 圖像合成",
      "C. 聲音合成",
      "D. 系統核心資料庫事務處理"
    ],
    "answer": "D",
    "explanation": "系統核心資料庫事務處理屬傳統資料庫運算，不屬生成式 AI 用於創造性輸出的範疇。"
  },
  {
    "id": 12,
    "question": "關於 OpenAI API，下列敘述何者正確？",
    "options": [
      "A. 僅能生成英文文本",
      "B. 支援多種模型呼叫與自訂參數",
      "C. 無法串接外部資料庫",
      "D. 免費不限次數使用"
    ],
    "answer": "B",
    "explanation": "OpenAI API 提供 GPT 多種型號，並允許開發者調整溫度、最大長度等參數以控制生成結果。"
  },
  {
    "id": 13,
    "question": "使用 Midjourney 平台時，下列哪一項屬於提示語（prompt）最佳實踐？",
    "options": [
      "A. 只輸入單一關鍵字",
      "B. 使用精確描述及風格指令",
      "C. 完全不指定任何額外參數",
      "D. 直接上傳最終圖片"
    ],
    "answer": "B",
    "explanation": "在 Midjourney 等圖像生成工具中，加入細節描述（構圖、色彩、風格）可大幅提升輸出品質與可控性。"
  },
  {
    "id": 14,
    "question": "Copilot Studio 最適合的使用情境為何？",
    "options": [
      "A. 進行批量影像轉檔",
      "B. 協助程式碼片段補全與生成",
      "C. 架設專屬資料庫",
      "D. 自動備份雲端服務"
    ],
    "answer": "B",
    "explanation": "Copilot Studio 以 AI 驅動程式碼補全、單元片段建議與重構為主，幫助開發者提高程式生產力。"
  },
  {
    "id": 15,
    "question": "VS Code for Copilot 與 GitHub Copilot 最大差異為何？",
    "options": [
      "A. 一者在 IDE 外，一者內建瀏覽器",
      "B. VS Code for Copilot 集成於 Visual Studio Code，GitHub Copilot 為雲端服務套餐",
      "C. 一者僅支援 Python，另一者僅支援 Java",
      "D. 兩者功能與部署方式完全相同"
    ],
    "answer": "B",
    "explanation": "VS Code for Copilot 是 VS Code 的擴充模組；GitHub Copilot 則可跨多種編輯器並依訂閱方案管理使用。"
  },
  {
    "id": 16,
    "question": "下列何者屬於撰寫高質量提示語（prompt）的關鍵？",
    "options": [
      "A. 使用模糊概念",
      "B. 指定明確目標與上下文",
      "C. 僅輸入模型名稱",
      "D. 迴避指令參數設定"
    ],
    "answer": "B",
    "explanation": "明確描述任務目標、角色與格式要求，可有效引導模型產出更符合期待的結果。"
  },
  {
    "id": 17,
    "question": "在 Retrieval-Augmented Generation（RAG）流程中，哪個步驟最先進行？",
    "options": [
      "A. 生成最終回應",
      "B. 檢索相關文件片段",
      "C. 模型微調",
      "D. 報告撰寫"
    ],
    "answer": "B",
    "explanation": "RAG 先使用檢索模型從知識庫中選出高相關性段落，再將其作為生成模型上下文，以提升回答精確度。"
  },
  {
    "id": 18,
    "question": "若要避免生成式 AI 的「幻覺」（hallucination），下列哪項策略最有效？",
    "options": [
      "A. 提高生成文字長度",
      "B. 在 prompt 中加入「請依據以下來源」並提供文檔",
      "C. 降低溫度（temperature）至 0",
      "D. 完全避免使用生成模型"
    ],
    "answer": "B",
    "explanation": "提供具體來源並在 prompt 中要求模型基於該內容回答，能降低脫離上下文或虛構資訊的風險。"
  },
  {
    "id": 19,
    "question": "在多人協同編輯生成式 AI 提示時，哪項工具功能最有助於管理版本？",
    "options": [
      "A. 提示歷史儲存與回溯",
      "B. 實時語音轉文字",
      "C. 自動加密提示",
      "D. 圖像後製套件"
    ],
    "answer": "A",
    "explanation": "儲存每次修改提示與結果，有助於團隊回溯最佳指令版本並比較差異，優化提示策略。"
  },
  {
    "id": 20,
    "question": "在大型語言模型（LLM）引擎中調整「temperature」參數可影響什麼？",
    "options": [
      "A. 模型的回應速度",
      "B. 回應的隨機性與創造性程度",
      "C. 模型使用的記憶體大小",
      "D. 語言翻譯準確度"
    ],
    "answer": "B",
    "explanation": "較高 temperature 會提升回應的多樣性與創意，但也增加不穩定性；較低值則使產出更集中且可預測。"
  },
  {
    "id": 21,
    "question": "在評估生成式 AI 工具效能時，哪項指標最能反映模型回應品質？",
    "options": [
      "A. 模型檔案大小",
      "B. 延遲時間（latency）",
      "C. 回應的準確率與相關度評分",
      "D. API 呼叫次數"
    ],
    "answer": "C",
    "explanation": "準確率與相關度分數可量化輸出文本與真實答案的吻合度，是品質評估關鍵指標。"
  },
  {
    "id": 22,
    "question": "進行成本效益分析時，哪項屬於成本範疇？",
    "options": [
      "A. 模型訓練所需 GPU 時間",
      "B. 書面報告格式",
      "C. 團隊午餐費用",
      "D. 公司品牌識別度"
    ],
    "answer": "A",
    "explanation": "訓練與推理所需的算力、儲存與 API 呼叫費用，皆為導入 AI 的直接成本，需要與效益比較。"
  },
  {
    "id": 23,
    "question": "若企業需選擇多個生成式 AI 解決方案進行對比，下列何者不應作為評估指標？",
    "options": [
      "A. 模型回應的專業度",
      "B. 供應商財務狀況",
      "C. 部署彈性與整合難易度",
      "D. 員工穿著著裝規範"
    ],
    "answer": "D",
    "explanation": "員工著裝不影響技術效能與導入成效，應優先考量技術能力、整合性與商業可行性。"
  },
  {
    "id": 24,
    "question": "在技術評估報告中，何者最能體現對工具性能的深度測試？",
    "options": [
      "A. API 命名空間",
      "B. 多語言／多領域測試用例",
      "C. 公司網站外觀",
      "D. 會議室環境"
    ],
    "answer": "B",
    "explanation": "透過不同語言與領域的測試案例可驗證模型在多樣化情境下的穩健度與泛化能力。"
  },
  {
    "id": 25,
    "question": "評估生成式 AI 導入風險時，下列哪項屬於操作風險？",
    "options": [
      "A. 模型輸出偏見",
      "B. 系統異常導致服務中斷",
      "C. 資料隱私法規違規",
      "D. 成本效益不符預期"
    ],
    "answer": "B",
    "explanation": "操作風險關注系統運行穩定度與可用性，服務中斷會直接影響業務連續性，需要設置高可用架構。"
  },
  {
    "id": 26,
    "question": "在生成式 AI 導入規劃的第一階段，應先完成何項工作？",
    "options": [
      "A. 規劃年度培訓行事曆",
      "B. 明確業務需求與目標設定",
      "C. 選擇開發團隊著裝",
      "D. 資料備份至多個地點"
    ],
    "answer": "B",
    "explanation": "明確目標可對齊業務核心需求，確保後續資源分配與指標衡量方向一致。"
  },
  {
    "id": 27,
    "question": "在分配導入資源時，下列何者最優先考量？",
    "options": [
      "A. 人員工位舒適度",
      "B. 模型研發與運行所需算力與儲存",
      "C. 辦公室裝潢風格",
      "D. 供應商宣傳手冊設計"
    ],
    "answer": "B",
    "explanation": "算力與儲存為生成式 AI 的基礎硬體需求，應與預算與架構設計同步規劃。"
  },
  {
    "id": 28,
    "question": "若要建立跨部門推動小組，下列何者為有效做法？",
    "options": [
      "A. 僅邀集 IT 部門成員",
      "B. 同時涵蓋業務、法務、資安與 IT 代表",
      "C. 完全依賴外部顧問",
      "D. 不需召開定期會議"
    ],
    "answer": "B",
    "explanation": "生成式 AI 涉及技術、合規、業務流程等多面向，需跨部門協作才能順利導入與落地。"
  },
  {
    "id": 29,
    "question": "在生成式 AI 導入時程規劃中，下列哪項屬於里程碑？",
    "options": [
      "A. 全部員工每日打卡時間",
      "B. 完成 MVP 概念驗證",
      "C. 購買辦公咖啡機",
      "D. 組織團建活動"
    ],
    "answer": "B",
    "explanation": "概念驗證（POC/MVP）是關鍵里程碑，可驗證技術可行性與初步效益。"
  },
  {
    "id": 30,
    "question": "規劃生成式 AI 長期運維時，下列何者最重要？",
    "options": [
      "A. 每月更換鍵盤",
      "B. 持續監控模型效能與漂移",
      "C. 每日清潔伺服器機房",
      "D. 員工生日慶祝"
    ],
    "answer": "B",
    "explanation": "模型效能隨時間與資料變化可能下降，需設立監控與重新訓練機制，確保輸出品質穩定。"
  },
  {
    "id": 31,
    "question": "在倫理風險管理中，下列哪項措施最能降低模型偏見？",
    "options": [
      "A. 使用單一族群資料訓練",
      "B. 建立多樣化資料審查機制",
      "C. 關閉所有偏見檢測",
      "D. 僅使用合成資料"
    ],
    "answer": "B",
    "explanation": "多樣化資料審查可發現並修正訓練集中的偏差，避免生成模型輸出歧視或刻板印象。"
  },
  {
    "id": 32,
    "question": "資料安全管理中，哪項做法屬於風險緩解？",
    "options": [
      "A. 資料加密與存取審計",
      "B. 完全不收集敏感資料",
      "C. 不進行任何安全測試",
      "D. 將所有資料公開"
    ],
    "answer": "A",
    "explanation": "加密與審計可防範未授權存取與竄改，是主動降低資料洩露風險的策略。"
  },
  {
    "id": 33,
    "question": "在合規風險管控上，下列哪項舉措最能符合 GDPR 要求？",
    "options": [
      "A. 讓所有員工自由存取個資",
      "B. 實施資料最少化與匿名化",
      "C. 永久保留所有用戶資料",
      "D. 不告知用戶隱私政策"
    ],
    "answer": "B",
    "explanation": "GDPR 要求僅收集必要資料並在用途完成後刪除或匿名化，以保護個人隱私權。"
  },
  {
    "id": 34,
    "question": "若要應對操作風險，下列哪項為有效策略？",
    "options": [
      "A. 只在本地端運行",
      "B. 設置多區域高可用與自動故障切換",
      "C. 減少監控日誌",
      "D. 停用所有警報"
    ],
    "answer": "B",
    "explanation": "多區域高可用架構可在某一區發生故障時自動切換，確保系統持續運行，降低營運中斷風險。"
  },
  {
    "id": 35,
    "question": "生成式 AI 系統若涉及敏感領域，下列哪項為第三方審計的主要目的？",
    "options": [
      "A. 評估生成內容的可讀性",
      "B. 驗證模型在倫理與隱私方面的合規性",
      "C. 提升模型生成速度",
      "D. 減少模型參數數量"
    ],
    "answer": "B",
    "explanation": "第三方審計可獨立評估系統在偏見、隱私、透明度等方面，提供客觀報告並協助提升信任度。"
  }
]