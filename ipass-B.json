[
  {
    "id": 1,
    "question": "假設某公司需要快速開發一個內部採購申請流程，但同時希望能在特定步驟執行自訂驗證邏輯，下列哪種平台最適合？",
    "options": [
      "A. 完全 No Code 平台",
      "B. 完全手寫程式碼",
      "C. Low Code 平台",
      "D. 僅用現有商業套件"
    ],
    "answer": "C",
    "explanation": "Low Code 平台不僅提供視覺化流程拖拉，還允許在必要處撰寫少量程式以滿足複雜驗證需求，最符合場景需求。"
  },
  {
    "id": 2,
    "question": "在選擇 No Code／Low Code 時，下列何者最能作為「基本認知檢核」？",
    "options": [
      "A. 是否包含 AI 生成功能",
      "B. 是否提供資料庫連接與 API 整合",
      "C. 是否完全免費",
      "D. 是否只能部署到本地環境"
    ],
    "answer": "B",
    "explanation": "連接外部資料庫及 API 是大多數業務應用的基礎功能，能否整合是判斷平台能力的第一步。"
  },
  {
    "id": 3,
    "question": "關於 No Code 平台與 Low Code 平台的差異，下列敘述何者正確？",
    "options": [
      "A. Low Code 平台禁止任何圖形化功能",
      "B. No Code 完全不容許自訂程式",
      "C. Low Code 不支援拖拉元件",
      "D. No Code 需要開發人員撰寫程式"
    ],
    "answer": "B",
    "explanation": "No Code 強調零程式碼，使用者只能透過圖形化界面配置；Low Code 則允許在圖形化基礎上撰寫少量程式。"
  },
  {
    "id": 4,
    "question": "若團隊成員皆無程式背景，卻要管理複雜資料流程，下列何者最可能是最佳解？",
    "options": [
      "A. 採用開源程式框架",
      "B. 手動 Excel 處理",
      "C. No Code 平台",
      "D. 內部建立專屬 IT 團隊"
    ],
    "answer": "C",
    "explanation": "No Code 平台提供可視化設計與自動化流程，適合無程式背景的業務人員快速上手並管理複雜邏輯。"
  },
  {
    "id": 5,
    "question": "在 No Code／Low Code 工具中，哪一種功能最能說明「平台擴充性」？",
    "options": [
      "A. 視覺化主題顏色設定",
      "B. 內建圖表元件",
      "C. 支援自訂外掛與 SDK",
      "D. 提供多種模板"
    ],
    "answer": "C",
    "explanation": "支援外掛與 SDK 意味平台允許用戶撰寫程式碼擴展功能，彰顯技術擴充與整合能力。"
  },
  {
    "id": 6,
    "question": "企業導入 No Code 平台後，最可能面臨哪項長期限制？",
    "options": [
      "A. 開發速度下降",
      "B. 功能過度客製反而無法實現",
      "C. 完全沒有維運需求",
      "D. 無法使用任何外部 API"
    ],
    "answer": "B",
    "explanation": "隨著需求複雜度增加，No Code 平台可能無法滿足高度客製化功能，需轉向 Low Code 或傳統開發。"
  },
  {
    "id": 7,
    "question": "使用 Low Code 平台，可有效降低哪些成本？",
    "options": [
      "A. 硬體採購成本",
      "B. 伺服器維運成本",
      "C. 開發人力與開發時間成本",
      "D. 電力與冷卻成本"
    ],
    "answer": "C",
    "explanation": "Low Code 平台封裝常見功能並減少重複開發，使開發團隊能更快交付並降低人力成本。"
  },
  {
    "id": 8,
    "question": "關於 No Code／Low Code 的廠商鎖定（vendor lock-in）風險，下列哪種做法最能緩解？",
    "options": [
      "A. 長期綁定單一供應商",
      "B. 只使用免費功能",
      "C. 使用開放標準與可匯出程式碼的平臺",
      "D. 完全不做資料備份"
    ],
    "answer": "C",
    "explanation": "採用支援匯出設定或原始程式碼的平臺，以及遵循開放標準，可降低未來遷移的困難。"
  },
  {
    "id": 9,
    "question": "在 No Code／Low Code 平台中，下列何者會成為安全性的主要顧慮？",
    "options": [
      "A. 使用者畫面色彩搭配",
      "B. 平台代管之使用者憑證與權限控管",
      "C. 平台是否免費",
      "D. 輸出流程圖的美觀度"
    ],
    "answer": "B",
    "explanation": "平台代管大量業務流程與機敏資料，如權限管理不當將造成資料外洩或未授權操作風險。"
  },
  {
    "id": 10,
    "question": "在進行成本效益分析時，下列何者屬於「隱性成本」？",
    "options": [
      "A. 平台授權費",
      "B. 員工培訓與流程重塑所需的時間",
      "C. 硬體設備購置費",
      "D. API 呼叫單價"
    ],
    "answer": "B",
    "explanation": "除了明確的軟體授權與運營費用外，培訓與流程調整所需的時間與人力往往被忽略但影響重大。"
  },
  {
    "id": 11,
    "question": "若要在客服系統中使用生成式 AI 生成自然回應，最適合下列哪個工具？",
    "options": [
      "A. Midjourney",
      "B. ChatGPT",
      "C. VS Code for Copilot",
      "D. Excel 巨集"
    ],
    "answer": "B",
    "explanation": "ChatGPT 專為對話生成設計，具有多輪交互能力，最適合即時客服應用。"
  },
  {
    "id": 12,
    "question": "在製作品牌宣傳海報時，下列哪個生成式 AI 工具最合適？",
    "options": [
      "A. OpenAI API-Text-Davinci",
      "B. Midjourney",
      "C. GitHub Copilot",
      "D. R 作圖套件"
    ],
    "answer": "B",
    "explanation": "Midjourney 專注高品質影像生成，支援文字到圖像的細緻轉換，適合創意視覺設計。"
  },
  {
    "id": 13,
    "question": "使用 Copilot Studio 進行程式重構時，何者操作最能提升建議準確度？",
    "options": [
      "A. 在提示中描述業務邏輯與目標",
      "B. 直接複製原始程式碼片段",
      "C. 關閉所有 IntelliSense 功能",
      "D. 只使用預設快捷鍵"
    ],
    "answer": "A",
    "explanation": "提供清晰的業務上下文與目標，能讓 Copilot Studio 更準確地理解需求並生成合適的程式碼建議。"
  },
  {
    "id": 14,
    "question": "若要將生成式 AI 應用於音樂創作，下列哪個模組最可能使用？",
    "options": [
      "A. ChatGPT",
      "B. OpenAI Jukebox",
      "C. Tableau",
      "D. Kubernetes"
    ],
    "answer": "B",
    "explanation": "OpenAI Jukebox 可生成音樂與歌詞，針對音頻創作場景設計，最符合需求。"
  },
  {
    "id": 15,
    "question": "在使用 GitHub Copilot 時，下列哪項做法最能提升模型學習效果？",
    "options": [
      "A. 完全不回饋任何接受或拒絕建議",
      "B. 經常接受符合預期的建議並拒絕不相關建議",
      "C. 僅使用一次不回頭",
      "D. 閉合所有其他擴充套件"
    ],
    "answer": "B",
    "explanation": "Copilot 會根據使用者接受或拒絕的回饋調整建議偏好，主動回饋可提升後續建議品質。"
  },
  {
    "id": 16,
    "question": "若希望多輪對話中模型「記住」先前提到的特定資訊，最佳做法為何？",
    "options": [
      "A. 重複在每個 prompt 中輸入資訊",
      "B. 使用系統訊息或上下文記憶功能",
      "C. 關閉對話上下文",
      "D. 每次都重啟模型"
    ],
    "answer": "B",
    "explanation": "使用系統級別的訊息或 Session Memory，可讓模型自動維持上下文，而非一再重複。"
  },
  {
    "id": 17,
    "question": "在使用 Prompt Chain（串接提示）時，下列哪步驟最關鍵？",
    "options": [
      "A. 隨機選擇 prompt",
      "B. 設計明確的中間輸出格式",
      "C. 只使用單一 prompt",
      "D. 忽略前一輸出"
    ],
    "answer": "B",
    "explanation": "明確的中間格式可讓後續 prompt 清楚接收與處理，維持流程的穩定性與可預測性。"
  },
  {
    "id": 18,
    "question": "在 Retrieval-Augmented Generation 流程中，使用者可如何提升檢索結果的精準度？",
    "options": [
      "A. 增加檢索庫大小",
      "B. 優化檢索向量索引與控制過濾條件",
      "C. 隨機刪除部分文件",
      "D. 使用更低階的硬體"
    ],
    "answer": "B",
    "explanation": "調整向量模型參數、使用正確的過濾條件（如日期或分類），能找到與查詢最相關的文件片段。"
  },
  {
    "id": 19,
    "question": "若要在 Prompt 中強制模型輸出特定結構（例如 JSON），應如何撰寫？",
    "options": [
      "A. 僅在輸出後自行解析",
      "B. 在 prompt 中加上「請以 JSON 整理回應」並給範例",
      "C. 使用非結構化文字",
      "D. 讓模型自由發揮"
    ],
    "answer": "B",
    "explanation": "明確指示模型以 JSON 格式輸出，並提供格式範例，可大幅提升生成結果的結構正確性。"
  },
  {
    "id": 20,
    "question": "在進行 Prompt 測試與優化時，哪種策略最適合快速迭代？",
    "options": [
      "A. 每次都重頭再寫一個完整版 prompt",
      "B. 使用 A/B Testing 比較不同 prompt 小幅差異的效果",
      "C. 完成一次性全量測試",
      "D. 不進行任何測試"
    ],
    "answer": "B",
    "explanation": "A/B Testing 能同時比較多個小改動，快速找出對結果最有效的提示方式，加速優化流程。"
  },
  {
    "id": 21,
    "question": "在評估多家生成式 AI 供應商時，下列哪項指標最能比較「生成一致性」？",
    "options": [
      "A. API 響應時間",
      "B. 不同 prompt 下結果相似度評分",
      "C. 廠商市場占有率",
      "D. 使用者介面顏色"
    ],
    "answer": "B",
    "explanation": "透過相似度評分量化多次生成的結果一致性，可判斷模型穩定性與重複性。"
  },
  {
    "id": 22,
    "question": "在成本效益分析中，若要精確計算「每生成一段文字成本」，最需要哪項資料？",
    "options": [
      "A. 平台 logo 大小",
      "B. 每次 API 呼叫的 token 數量與單價",
      "C. 使用者專用筆電規格",
      "D. 開發人員工時工資"
    ],
    "answer": "B",
    "explanation": "生成成本主要取決於使用的 token 數量與每 token 的付費價格，能精確計算單位輸出成本。"
  },
  {
    "id": 23,
    "question": "若企業需要同時評估工具的效能與合規風險，下列哪種報告最完整？",
    "options": [
      "A. 僅效能測試報告",
      "B. 僅法規遵循清單",
      "C. 效能測試結合合規審查與漏洞掃描",
      "D. 公司財報"
    ],
    "answer": "C",
    "explanation": "綜合效能指標與安全合規審查（如 PII 偵測）可全面掌握工具的技術與法律風險。"
  },
  {
    "id": 24,
    "question": "進行技術效能基準測試時，下列何者最適合作為「多輪對話」場景的測試指標？",
    "options": [
      "A. 模型訓練資料來源數量",
      "B. 多輪對話的記憶保持率與回應相關度",
      "C. API 文件長度",
      "D. 伺服器地理位置"
    ],
    "answer": "B",
    "explanation": "多輪對話場景下，模型是否能保留上下文並給出相關回答，是衡量對話性能的關鍵指標。"
  },
  {
    "id": 25,
    "question": "在評估生成式 AI 導入風險時，下列哪一項屬於「合規風險」？",
    "options": [
      "A. 模型回應速度過慢",
      "B. 漏報或誤報敏感個資",
      "C. 模型訓練成本過高",
      "D. 用戶介面不夠美觀"
    ],
    "answer": "B",
    "explanation": "合規風險關注模型是否處理個資符合法規，誤漏報敏感資料可能導致法規違規與罰款。"
  },
  {
    "id": 26,
    "question": "在導入規劃階段，何者最能確保「方案成功落地」？",
    "options": [
      "A. 隨意設定大量 KPI",
      "B. 明確定義業務目標、關鍵指標與里程碑",
      "C. 完全依賴外部顧問",
      "D. 忽略使用者培訓"
    ],
    "answer": "B",
    "explanation": "事前訂立清晰且可衡量的目標與里程碑，可讓團隊對齊並且及早發現偏差。"
  },
  {
    "id": 27,
    "question": "建立生成式 AI 導入的專案團隊時，下列哪些角色應優先納入？",
    "options": [
      "A. UI 設計師與法務",
      "B. 資料工程師、業務代表、資安專家",
      "C. 只聘請外部顧問",
      "D. 只包含高階經理"
    ],
    "answer": "B",
    "explanation": "資料工程師負責 ETL，業務代表確保對齊需求，資安專家管控合規，是跨部門成功的關鍵。"
  },
  {
    "id": 28,
    "question": "若專案遇到資料缺失且延誤時，最佳應對措施為何？",
    "options": [
      "A. 直接跳過該步驟",
      "B. 評估資料替代來源並調整時程與資源",
      "C. 增加非關聯人員投入",
      "D. 無條件延長開發時間"
    ],
    "answer": "B",
    "explanation": "透過找尋替代來源或合成資料，並根據實際狀況調整計畫，可兼顧進度與品質。"
  },
  {
    "id": 29,
    "question": "在規劃階段，何者為衡量「用戶採用率」的關鍵指標？",
    "options": [
      "A. 使用者讀取文件次數",
      "B. 月活躍用戶數（MAU）與任務完成率",
      "C. 伺服器 CPU 使用率",
      "D. API 日誌大小"
    ],
    "answer": "B",
    "explanation": "MAU 可反映使用頻次，任務完成率則顯示用戶是否真正透過 AI 工具提升效率。"
  },
  {
    "id": 30,
    "question": "導入專案結束後，下列哪種做法最能保障長期成效？",
    "options": [
      "A. 完全移交給 IT",
      "B. 設立持續優化與監控機制",
      "C. 結案後不再關注",
      "D. 每年更換一次平台"
    ],
    "answer": "B",
    "explanation": "持續監控模型效能、用戶回饋與業務指標，並定期優化，才能確保方案長期穩定運行。"
  },
  {
    "id": 31,
    "question": "在偏見檢測中，哪種方法能發現潛在族群歧視？",
    "options": [
      "A. 單純觀察輸出樣本",
      "B. 使用公平性指標（如 demographic parity）定量評估",
      "C. 只測試主要族群",
      "D. 完全不做測試"
    ],
    "answer": "B",
    "explanation": "公平性指標能量化模型對不同族群輸出結果的差異，是偏見檢測的核心工具。"
  },
  {
    "id": 32,
    "question": "若要實現差分隱私（Differential Privacy），最重要的技術步驟是？",
    "options": [
      "A. 增加訓練次數",
      "B. 在模型更新時加入噪聲",
      "C. 減少資料量",
      "D. 關閉所有日誌"
    ],
    "answer": "B",
    "explanation": "差分隱私透過在梯度或計數結果中加入適當噪聲，保護單一樣本不被識別，同時保留整體趨勢。"
  },
  {
    "id": 33,
    "question": "在第三方審計時，下列哪種文件最能證明合規？",
    "options": [
      "A. 隨機生成的測試報告",
      "B. 完整的數據處理與存取日誌",
      "C. 非結構化備忘錄",
      "D. 口頭承諾"
    ],
    "answer": "B",
    "explanation": "系統日誌可展現誰在何時對何種數據進行過何種操作，是合規審計的關鍵證據。"
  },
  {
    "id": 34,
    "question": "若模型在運行半年後出現性能下降，最可能的原因為何？",
    "options": [
      "A. 服務器關機",
      "B. 模型漂移（Data/Concept Drift）",
      "C. 開發人員離職",
      "D. UI 配色更改"
    ],
    "answer": "B",
    "explanation": "隨著實際使用場景或資料分布改變，模型原先學到的模式不再適用，需重新訓練或微調。"
  },
  {
    "id": 35,
    "question": "生成式 AI 事故響應計畫中，第一步應該做什麼？",
    "options": [
      "A. 問責並公開指名",
      "B. 隔離受影響系統並通報應變團隊",
      "C. 停用所有 AI 服務",
      "D. 發布新聞稿"
    ],
    "answer": "B",
    "explanation": "事故響應首要隔離問題源並通知專責團隊，以免損害擴大並迅速啟動調查與修復流程。"
  }
]