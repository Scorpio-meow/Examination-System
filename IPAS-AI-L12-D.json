[
  {
    "id": 1,
    "question": "某團隊需實現跨雲端與本地系統的複雜工作流程，且未來可能頻繁調整，最適合的開發模式是？",
    "options": [
      "A. 完全手寫程式",
      "B. 完全 No Code 平台",
      "C. Low Code 平台",
      "D. 書寫 SQL 腳本"
    ],
    "answer": "C",
    "explanation": "Low Code 平台除了可視化拖拉，還允許在關鍵節點插入自訂程式碼，兼顧跨環境整合與未來調整彈性，最能滿足跨雲與本地混合部署需求。"
  },
  {
    "id": 2,
    "question": "在評估平台時，若要判斷其「開放性」，最應檢查下列哪項？",
    "options": [
      "A. 提供的配色主題",
      "B. 可否匯出並部署流程至其他環境",
      "C. 預設 API 文件的字體",
      "D. 內建表單樣式數量"
    ],
    "answer": "B",
    "explanation": "平台若允許將流程或程式碼匯出並在自有環境運行，即具備開放性；若只能在原供應商環境執行，則鎖定風險高。"
  },
  {
    "id": 3,
    "question": "在 No Code/Low Code 概念中，何者最能說明「可重用性」？",
    "options": [
      "A. 元件可在多個流程拖入使用",
      "B. 支援多國語系",
      "C. 自動化測試功能",
      "D. UI 介面自動調整"
    ],
    "answer": "A",
    "explanation": "封裝成元件後可跨多個流程重複使用，減少重複開發，提升維護效率，是平台重要的可重用性指標。"
  },
  {
    "id": 4,
    "question": "團隊希望平台在變更需求時能快速迭代，下列哪個能力最關鍵？",
    "options": [
      "A. 內建報表圖表種類",
      "B. 支援版本控制並可回滾",
      "C. 模板數量",
      "D. 平台商標顏色"
    ],
    "answer": "B",
    "explanation": "版本控制與回滾機制能讓團隊在迭代中快速修復錯誤並追蹤歷史變更，確保快速交付時仍能維持穩定性。"
  },
  {
    "id": 5,
    "question": "若需在 No Code 平台中執行複雜運算，最符合設計理念的做法是？",
    "options": [
      "A. 在平台內撰寫大段 JavaScript",
      "B. 將運算邏輯封裝為微服務，透過 API 呼叫",
      "C. 直接在 UI 加入複雜公式",
      "D. 強制用戶離線手動計算"
    ],
    "answer": "B",
    "explanation": "No Code 平台應避免過度手寫程式，複雜運算可由外部微服務負責，並以 API 與平台集成，保持 No Code 的核心優勢。"
  },
  {
    "id": 6,
    "question": "某企業導入 Low Code 平台後，發現部分功能仍無法實現，其主要原因最可能是？",
    "options": [
      "A. 平台 UI 不夠美觀",
      "B. 平台底層 DSL 無法覆蓋特定業務邏輯",
      "C. 平台免費試用期結束",
      "D. 員工不會操作 Excel"
    ],
    "answer": "B",
    "explanation": "DSL（Domain-Specific Language）決定了平台能支持的邏輯範圍，若 DSL 不夠強大或未開放擴充，則無法實現高度客製功能。"
  },
  {
    "id": 7,
    "question": "使用 No Code 平台可以加速 MVP 上線，下列哪種風險最需要留意？",
    "options": [
      "A. 開發人員薪資提升",
      "B. 初期架構設計不佳導致後續維護困難",
      "C. 使用者介面字體錯誤",
      "D. 無法測試 API"
    ],
    "answer": "B",
    "explanation": "快速上線可能忽略架構規劃，導致後續需求變更或擴充時維護難度大增，需在 MVP 階段做好高層次設計。"
  },
  {
    "id": 8,
    "question": "在 No Code/Low Code 平台中，若要降低 Vendor Lock-in 風險，下列哪種做法最有效？",
    "options": [
      "A. 定期更換平台",
      "B. 僅使用免費功能",
      "C. 透過標準化 API 與外部系統集成，並定期導出配置",
      "D. 讓所有資料都存於平台內部無法導出"
    ],
    "answer": "C",
    "explanation": "採用標準化接口和外部系統互通、定期導出流程/資料，可確保即使更換供應商也能將核心業務遷移至新平台。"
  },
  {
    "id": 9,
    "question": "某平台在高併發下性能不佳，下列哪項優化策略最直接？",
    "options": [
      "A. 增加 UI 動畫效果",
      "B. 將熱點流程拆分為多個服務並行執行",
      "C. 減少元件數量",
      "D. 更換前端框架"
    ],
    "answer": "B",
    "explanation": "拆分熱點流程，建立並行的微服務可分散壓力並提升併發處理能力，比單純調整元件或前端改動更有效。"
  },
  {
    "id": 10,
    "question": "在成本效益分析時，哪項「間接成本」最容易被低估？",
    "options": [
      "A. API 呼叫費",
      "B. 平台升級與補丁測試工時",
      "C. 硬體折舊",
      "D. UX 設計費"
    ],
    "answer": "B",
    "explanation": "平台升級與補丁往往需要測試並重新驗證流程，涉及大量人力，屬於間接成本但影響系統可用性與安全性。"
  },
  {
    "id": 11,
    "question": "若要在金融行業快速部署生成式 AI 風險報告撰寫，最合適的做法是？",
    "options": [
      "A. 使用 Midjourney 產生風險圖示",
      "B. 基於金融專業語料微調 GPT 模型並結合 RAG",
      "C. 用 GitHub Copilot 撰寫報告",
      "D. 使用 Jupyter Notebook"
    ],
    "answer": "B",
    "explanation": "金融領域對準確性與合規要求高，需先微調模型以掌握專業術語，再利用 RAG 從報表與政策文件檢索事實，才能生成合規報告。"
  },
  {
    "id": 12,
    "question": "團隊需生成多語種市場宣傳文案，下列工具選擇最有效？",
    "options": [
      "A. ChatGPT 多輪對話直接翻譯",
      "B. 使用專門的翻譯引擎再由 ChatGPT 美化",
      "C. Midjourney 圖像生成",
      "D. VS Code for Copilot"
    ],
    "answer": "B",
    "explanation": "專門翻譯模型在術語準確度上優於通用生成模型，先翻譯再用 ChatGPT 美化，可兼顧準確性與創意文案。"
  },
  {
    "id": 13,
    "question": "在影像生成場景中，若需要大規模生產品牌形象圖，最應優先考慮哪種策略？",
    "options": [
      "A. 提高 temperature",
      "B. 固定 seed 並批量輸入變量",
      "C. 在 prompt 中加入隨機詞",
      "D. 每次使用不同模型版本"
    ],
    "answer": "B",
    "explanation": "固定 seed 能保持風格一致性，並通過變量（如標誌位置、顏色方案）批量生產多張品牌形象圖，兼顧規模化與一致性。"
  },
  {
    "id": 14,
    "question": "若要在開發 IDE 中實現程式文件自動補全，應使用哪項工具？",
    "options": [
      "A. Midjourney",
      "B. GitHub Copilot 或 VS Code for Copilot",
      "C. Jukebox",
      "D. Tableau"
    ],
    "answer": "B",
    "explanation": "Copilot 系列專門針對程式碼補全和重構而設計，能在多種語言與框架中提供上下文相關的建議。"
  },
  {
    "id": 15,
    "question": "團隊想為客服錄音自動生成摘要，最合適的流程是？",
    "options": [
      "A. 直接用 ChatGPT 轉錄後摘要",
      "B. 使用 Whisper 轉錄為文字，再由 GPT-4 或類似大模型生成重點摘要",
      "C. 手動聽寫重點",
      "D. 用 Midjourney 生成音波圖"
    ],
    "answer": "B",
    "explanation": "Whisper 專精於高質量自動語音識別，將音檔轉文字後，再用生成模型生成摘要，能兼顧轉錄準確度與文本濃縮效果。"
  },
  {
    "id": 16,
    "question": "團隊欲在 prompt 中引導模型採用「演講稿」風格，哪種做法最有效？",
    "options": [
      "A. 在 prompt 開頭注明「以演講稿格式回答」並提供範例開頭",
      "B. 只輸入「講稿」一詞",
      "C. 提高 temperature",
      "D. 不使用 prompt"
    ],
    "answer": "A",
    "explanation": "明確指令並示範格式能讓模型理解輸出結構與語氣，比只給關鍵字更能穩定獲得所需風格。"
  },
  {
    "id": 17,
    "question": "在多階段 Prompt Chain 中，若第 2 階段需要利用第 1 階段生成的實體列表，下列串接方式最合理？",
    "options": [
      "A. 將第 1 階段輸出直接作為第 2 階段 prompt 的條件",
      "B. 忽略第 1 輸出",
      "C. 只複製第 1 的標題",
      "D. 重啟模型"
    ],
    "answer": "A",
    "explanation": "直接將第 1 階段輸出實體列表放入第 2 prompt，可讓模型基於具體內容繼續進行，確保流程連貫。"
  },
  {
    "id": 18,
    "question": "若要通過提示控制生成模型在法律文本中避免主觀判斷，最應在 prompt 中加入？",
    "options": [
      "A. 「請保持中立，僅陳述法條與案例」",
      "B. 「請自由發揮」",
      "C. 「添加個人觀點」",
      "D. 「提高溫度」"
    ],
    "answer": "A",
    "explanation": "明確要求中立並提供參考來源範例，能讓模型在生成法律文本時聚焦客觀條款與事實，避免偏離範圍。"
  },
  {
    "id": 19,
    "question": "在實現 RAG 時，若檢索庫中存在文本相似度過高的多個段落，最佳做法是？",
    "options": [
      "A. 全部傳給生成模型",
      "B. 只選取相關度最高且去重後的片段",
      "C. 隨機選取片段",
      "D. 只傳遞標題"
    ],
    "answer": "B",
    "explanation": "避免重複信息淹沒模型，應篩選最相關且去重的內容，確保上下文精簡有效，提高生成質量與效率。"
  },
  {
    "id": 20,
    "question": "若要讓模型在回答中同時考慮情感色彩，可採取何種策略？",
    "options": [
      "A. 在 prompt 中明確要求「以溫暖語調回答」",
      "B. 增加 max_tokens",
      "C. 使用零溫度",
      "D. 忽略語調"
    ],
    "answer": "A",
    "explanation": "通過提示指定語調或情感風格，模型可在語言生成時調整用詞與句式，達到情感引導效果。"
  },
  {
    "id": 21,
    "question": "在多供應商比對時，若要同時衡量回應準確性與成本，下列哪種量化指標最合適？",
    "options": [
      "A. 平均 token 數",
      "B. 單次生成成本與 BLEU/ROUGE 分數的加權指標",
      "C. API 文檔頁數",
      "D. 平台 logo 數量"
    ],
    "answer": "B",
    "explanation": "將品質指標（如 BLEU、ROUGE）與成本指標（單次 token 成本）加權合併，可在同一框架下比較性價比。"
  },
  {
    "id": 22,
    "question": "在 A/B Testing Prompt 優化中，若要確認差異具有統計學意義，下列步驟最重要？",
    "options": [
      "A. 增加模型版本",
      "B. 收集足夠樣本並進行假設檢定（如 t 檢定）",
      "C. 只觀察平均分數",
      "D. 減少測試時長"
    ],
    "answer": "B",
    "explanation": "假設檢定能判斷兩組分數差異是否因隨機波動產生，確保優化結論具有可靠性。"
  },
  {
    "id": 23,
    "question": "若導入評估報告顯示在法規合規項目得分較低，下列哪項改進措施最直接？",
    "options": [
      "A. 增加訓練資料量",
      "B. 加入合規審核流程並使用 PII 檢測模組",
      "C. 提高 temperature",
      "D. 減少 prompt 長度"
    ],
    "answer": "B",
    "explanation": "增設自動化合規檢測模組（如 PII 偵測）並將審核流程納入回應管道，可直接提升合規性得分。"
  },
  {
    "id": 24,
    "question": "在測試多語言模型時，下列哪項評估方式最能反映跨語言一致性？",
    "options": [
      "A. 僅測試英文",
      "B. 隨機測試若干語言並比較翻譯前後語義保真度",
      "C. 測試不同 model size",
      "D. 只測試繁體中文"
    ],
    "answer": "B",
    "explanation": "通過多語言輸入與輸出對比，量化語義保真度（如利用 MoverScore、COMET），才能評估模型跨語言的穩定性。"
  },
  {
    "id": 25,
    "question": "在生成式 AI 評估中，哪項測試能量化「幻覺率」（hallucination rate）？",
    "options": [
      "A. 計算回應字數",
      "B. 與知識庫事實對比，統計不符事實的回應比例",
      "C. 觀察模型運行記憶體使用量",
      "D. 檢查 API 響應速度"
    ],
    "answer": "B",
    "explanation": "將生成內容與基準知識庫對對比，量化錯誤訊息的比例，即可得出幻覺率，作為模型可靠性指標。"
  },
  {
    "id": 26,
    "question": "若專案採用 Scrum 方法，哪個活動最適合在每個 Sprint 開始時進行？",
    "options": [
      "A. 回顧（Retrospective）",
      "B. Sprint 計劃會議（Sprint Planning）",
      "C. 敏捷宣言簽署",
      "D. 系統負載測試"
    ],
    "answer": "B",
    "explanation": "Sprint Planning 用於定義本週期要完成的使用者故事和任務，是 Scrum 流程的起點。"
  },
  {
    "id": 27,
    "question": "在導入生成式 AI 的初期階段，哪種文件對齊利益相關者最關鍵？",
    "options": [
      "A. 詳細的技術設計文檔",
      "B. 商業目標與需求規格書",
      "C. UI 設計原型",
      "D. 員工手冊"
    ],
    "answer": "B",
    "explanation": "清楚描述商業目標、KPI 以及可行性需求，能讓技術團隊與業務部門達成共同認知並設定正確方向。"
  },
  {
    "id": 28,
    "question": "如果專案需在 1 個月內交付可演示的最小可行產品（MVP），以下哪種里程碑劃分最符合敏捷與精益原則？",
    "options": [
      "A. 全月集中開發最終版本，不做中間驗證",
      "B. 第1–2週：需求與資料準備、原型與模型開發；第3週：系統整合與功能測試；第4週：用戶驗收與優化",
      "C. 每天對外發布一個獨立新功能，不進行整合測試",
      "D. 只做需求訪談，開發階段不設定任何里程碑"
    ],
    "answer": "B",
    "explanation": "前半月聚焦需求澄清、資料收集與原型/模型開發，可迅速驗證核心技術可行性。第3週將各部分集成並進行功能與回歸測試，確保系統整體穩定。最後一週進行用戶驗收，收集反饋並做必要優化，符合短週期迭代與持續改進的敏捷理念。"
  },
  {
    "id": 29,
    "question": "在變更管理計畫中，哪項措施最能促進用戶採用新 AI 功能？",
    "options": [
      "A. 強制部署",
      "B. 提供分級訪談並收集反饋後迭代",
      "C. 不告知用戶",
      "D. 禁止舊系統使用"
    ],
    "answer": "B",
    "explanation": "分級用戶訪談與快速迭代能讓用戶感受到改進，降低抗拒並提高最終採用率。"
  },
  {
    "id": 30,
    "question": "部署前進行 Canary Release 的主要目的為何？",
    "options": [
      "A. 給用戶驚喜",
      "B. 在小部分流量中驗證系統穩定性與性能",
      "C. 減少伺服器數量",
      "D. 忽略回滾策略"
    ],
    "answer": "B",
    "explanation": "Canary Release 將新功能僅在少量流量中釋出，觀察實際表現並快速回滾，降低全面部署風險。"
  },
  {
    "id": 31,
    "question": "若要在大規模生產環境中落實差分隱私，下列哪種 ε（epsilon）選擇最具挑戰？",
    "options": [
      "A. ε→∞（無噪聲）",
      "B. ε→0（強隱私）",
      "C. ε=1",
      "D. ε不設定"
    ],
    "answer": "B",
    "explanation": "ε 越小隱私保證越強，但會對輸出質量產生嚴重影響，實作時需在隱私與可用性間權衡。"
  },
  {
    "id": 32,
    "question": "要持續監測模型偏見，哪種方法最能追踪不同群體的錯誤率差異？",
    "options": [
      "A. 隨機抽樣",
      "B. 分群指標（per-group error rate）定期報表",
      "C. 只觀察整體準確率",
      "D. 減少測試資料"
    ],
    "answer": "B",
    "explanation": "定期計算並比較各人口統計群體的錯誤率，可發現模型對不同群體的不公平表現，便於持續修正。"
  },
  {
    "id": 33,
    "question": "若檢測到模型異常回應，首要的事故響應步驟是？",
    "options": [
      "A. 發布新聞稿",
      "B. 隔離異常請求並記錄對應日誌",
      "C. 增加模型參數",
      "D. 重啟整個平台"
    ],
    "answer": "B",
    "explanation": "隔離異常請求可防止問題擴散，並保留日誌作為後續根因分析的證據，是 incident response 的首要步驟。"
  },
  {
    "id": 34,
    "question": "在第三方審計報告中，若審計發現模型在某些場景下違反倫理標準，下列哪項行動最適當？",
    "options": [
      "A. 忽略審計建議",
      "B. 制定具體修復計畫並落實再審計",
      "C. 停用模型",
      "D. 私下銷毀審計報告"
    ],
    "answer": "B",
    "explanation": "根據審計結果制定並執行修復行動方案，確保在下一輪審計中達到合規與倫理要求，是負責任 AI 的核心。"
  },
  {
    "id": 35,
    "question": "若要自動化檢測模型漂移（drift），下列哪種技術最適合？",
    "options": [
      "A. 實時比較訓練與生產數據的統計分布差異",
      "B. 人工目視檢查",
      "C. 完全不做檢測",
      "D. 僅關注系統 CPU 使用率"
    ],
    "answer": "A",
    "explanation": "通過計算生產環境輸入數據與原始訓練集的分布指標（如 KL 散度），可自動檢測資料或概念漂移，及早觸發重新訓練或調整。"
  }
]
